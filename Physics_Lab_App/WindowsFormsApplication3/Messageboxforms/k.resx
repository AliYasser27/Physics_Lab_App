<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>